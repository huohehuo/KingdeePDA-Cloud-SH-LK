package com.fangzuo.greendao.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.fangzuo.assist.cloud.Dao.T_main;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "T_MAIN".
*/
public class T_mainDao extends AbstractDao<T_main, String> {

    public static final String TABLENAME = "T_MAIN";

    /**
     * Properties of entity T_main.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property FIndex = new Property(0, String.class, "FIndex", true, "FINDEX");
        public final static Property FOrderId = new Property(1, long.class, "FOrderId", false, "FORDER_ID");
        public final static Property FAccountID = new Property(2, String.class, "FAccountID", false, "FACCOUNT_ID");
        public final static Property FBarcode = new Property(3, String.class, "FBarcode", false, "FBARCODE");
        public final static Property IMIE = new Property(4, String.class, "IMIE", false, "IMIE");
        public final static Property FBillNo = new Property(5, String.class, "FBillNo", false, "FBILL_NO");
        public final static Property FBillerID = new Property(6, String.class, "FBillerID", false, "FBILLER_ID");
        public final static Property Activity = new Property(7, int.class, "activity", false, "ACTIVITY");
        public final static Property FSoorDerno = new Property(8, String.class, "FSoorDerno", false, "FSOOR_DERNO");
        public final static Property FPriceTimePoint = new Property(9, String.class, "FPriceTimePoint", false, "FPRICE_TIME_POINT");
        public final static Property FStockOrgId = new Property(10, String.class, "FStockOrgId", false, "FSTOCK_ORG_ID");
        public final static Property FPurchaseOrgId = new Property(11, String.class, "FPurchaseOrgId", false, "FPURCHASE_ORG_ID");
        public final static Property FBillTypeID = new Property(12, String.class, "FBillTypeID", false, "FBILL_TYPE_ID");
        public final static Property FOwnerTypeIdHead = new Property(13, String.class, "FOwnerTypeIdHead", false, "FOWNER_TYPE_ID_HEAD");
        public final static Property FOwnerIdHead = new Property(14, String.class, "FOwnerIdHead", false, "FOWNER_ID_HEAD");
        public final static Property FOwnerIdHeadNote = new Property(15, String.class, "FOwnerIdHeadNote", false, "FOWNER_ID_HEAD_NOTE");
        public final static Property FHuozhuId = new Property(16, String.class, "FHuozhuId", false, "FHUOZHU_ID");
        public final static Property FOrgId = new Property(17, String.class, "FOrgId", false, "FORG_ID");
        public final static Property FOwnerTypeIdHeadIn = new Property(18, String.class, "FOwnerTypeIdHeadIn", false, "FOWNER_TYPE_ID_HEAD_IN");
        public final static Property FOwnerIdHeadIn = new Property(19, String.class, "FOwnerIdHeadIn", false, "FOWNER_ID_HEAD_IN");
        public final static Property FDBType = new Property(20, String.class, "FDBType", false, "FDBTYPE");
        public final static Property FDBDirection = new Property(21, String.class, "FDBDirection", false, "FDBDIRECTION");
        public final static Property FID = new Property(22, String.class, "FID", false, "FID");
        public final static Property FEntryID = new Property(23, String.class, "FEntryID", false, "FENTRY_ID");
        public final static Property FSettleOrgId = new Property(24, String.class, "FSettleOrgId", false, "FSETTLE_ORG_ID");
        public final static Property FNeedOrgId = new Property(25, String.class, "FNeedOrgId", false, "FNEED_ORG_ID");
        public final static Property FSettleCurrId = new Property(26, String.class, "FSettleCurrId", false, "FSETTLE_CURR_ID");
        public final static Property FDate = new Property(27, String.class, "FDate", false, "FDATE");
        public final static Property FSupplierId = new Property(28, String.class, "FSupplierId", false, "FSUPPLIER_ID");
        public final static Property FDepartmentNumber = new Property(29, String.class, "FDepartmentNumber", false, "FDEPARTMENT_NUMBER");
        public final static Property FDepartment = new Property(30, String.class, "FDepartment", false, "FDEPARTMENT");
        public final static Property FPurchaseDeptId = new Property(31, String.class, "FPurchaseDeptId", false, "FPURCHASE_DEPT_ID");
        public final static Property FPurchaseDept = new Property(32, String.class, "FPurchaseDept", false, "FPURCHASE_DEPT");
        public final static Property FPurchaserId = new Property(33, String.class, "FPurchaserId", false, "FPURCHASER_ID");
        public final static Property FPurchaser = new Property(34, String.class, "FPurchaser", false, "FPURCHASER");
        public final static Property FStockerNumber = new Property(35, String.class, "FStockerNumber", false, "FSTOCKER_NUMBER");
        public final static Property FStocker = new Property(36, String.class, "FStocker", false, "FSTOCKER");
        public final static Property FCustomerID = new Property(37, String.class, "FCustomerID", false, "FCUSTOMER_ID");
        public final static Property FCustomer = new Property(38, String.class, "FCustomer", false, "FCUSTOMER");
        public final static Property FNot = new Property(39, String.class, "FNot", false, "FNOT");
        public final static Property F_FFF_Text = new Property(40, String.class, "F_FFF_Text", false, "F__FFF__TEXT");
        public final static Property FCfLenghtAny = new Property(41, String.class, "FCfLenghtAny", false, "FCF_LENGHT_ANY");
        public final static Property FCfThick = new Property(42, String.class, "FCfThick", false, "FCF_THICK");
        public final static Property FCfWide = new Property(43, String.class, "FCfWide", false, "FCF_WIDE");
        public final static Property FStorageId = new Property(44, String.class, "FStorageId", false, "FSTORAGE_ID");
        public final static Property FStorageNumber = new Property(45, String.class, "FStorageNumber", false, "FSTORAGE_NUMBER");
        public final static Property FStorage = new Property(46, String.class, "FStorage", false, "FSTORAGE");
        public final static Property FBoxCode = new Property(47, String.class, "FBoxCode", false, "FBOX_CODE");
        public final static Property FBatch = new Property(48, String.class, "FBatch", false, "FBATCH");
        public final static Property FBoxCodeOrder = new Property(49, long.class, "FBoxCodeOrder", false, "FBOX_CODE_ORDER");
        public final static Property FStorageOutId = new Property(50, String.class, "FStorageOutId", false, "FSTORAGE_OUT_ID");
        public final static Property FStorageOut = new Property(51, String.class, "FStorageOut", false, "FSTORAGE_OUT");
        public final static Property FStorageInId = new Property(52, String.class, "FStorageInId", false, "FSTORAGE_IN_ID");
        public final static Property FStorageIn = new Property(53, String.class, "FStorageIn", false, "FSTORAGE_IN");
        public final static Property FWaveHouseOutId = new Property(54, String.class, "FWaveHouseOutId", false, "FWAVE_HOUSE_OUT_ID");
        public final static Property FWaveHouseOut = new Property(55, String.class, "FWaveHouseOut", false, "FWAVE_HOUSE_OUT");
        public final static Property FWaveHouseInId = new Property(56, String.class, "FWaveHouseInId", false, "FWAVE_HOUSE_IN_ID");
        public final static Property FWaveHouseIn = new Property(57, String.class, "FWaveHouseIn", false, "FWAVE_HOUSE_IN");
        public final static Property FWlCompany = new Property(58, String.class, "FWlCompany", false, "FWL_COMPANY");
        public final static Property FCarBoxNo = new Property(59, String.class, "FCarBoxNo", false, "FCAR_BOX_NO");
        public final static Property FPassNo = new Property(60, String.class, "FPassNo", false, "FPASS_NO");
        public final static Property FFreight = new Property(61, String.class, "FFreight", false, "FFREIGHT");
        public final static Property FYaoNo = new Property(62, String.class, "FYaoNo", false, "FYAO_NO");
        public final static Property FBaoNum = new Property(63, String.class, "FBaoNum", false, "FBAO_NUM");
        public final static Property FIsInBox = new Property(64, int.class, "FIsInBox", false, "FIS_IN_BOX");
        public final static Property FStr1 = new Property(65, String.class, "FStr1", false, "FSTR1");
        public final static Property FStr2 = new Property(66, String.class, "FStr2", false, "FSTR2");
        public final static Property FStr3 = new Property(67, String.class, "FStr3", false, "FSTR3");
        public final static Property FStr4 = new Property(68, String.class, "FStr4", false, "FSTR4");
        public final static Property FStr5 = new Property(69, String.class, "FStr5", false, "FSTR5");
        public final static Property FFieldMan = new Property(70, String.class, "FFieldMan", false, "FFIELD_MAN");
    }


    public T_mainDao(DaoConfig config) {
        super(config);
    }
    
    public T_mainDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"T_MAIN\" (" + //
                "\"FINDEX\" TEXT PRIMARY KEY NOT NULL ," + // 0: FIndex
                "\"FORDER_ID\" INTEGER NOT NULL ," + // 1: FOrderId
                "\"FACCOUNT_ID\" TEXT," + // 2: FAccountID
                "\"FBARCODE\" TEXT," + // 3: FBarcode
                "\"IMIE\" TEXT," + // 4: IMIE
                "\"FBILL_NO\" TEXT," + // 5: FBillNo
                "\"FBILLER_ID\" TEXT," + // 6: FBillerID
                "\"ACTIVITY\" INTEGER NOT NULL ," + // 7: activity
                "\"FSOOR_DERNO\" TEXT," + // 8: FSoorDerno
                "\"FPRICE_TIME_POINT\" TEXT," + // 9: FPriceTimePoint
                "\"FSTOCK_ORG_ID\" TEXT," + // 10: FStockOrgId
                "\"FPURCHASE_ORG_ID\" TEXT," + // 11: FPurchaseOrgId
                "\"FBILL_TYPE_ID\" TEXT," + // 12: FBillTypeID
                "\"FOWNER_TYPE_ID_HEAD\" TEXT," + // 13: FOwnerTypeIdHead
                "\"FOWNER_ID_HEAD\" TEXT," + // 14: FOwnerIdHead
                "\"FOWNER_ID_HEAD_NOTE\" TEXT," + // 15: FOwnerIdHeadNote
                "\"FHUOZHU_ID\" TEXT," + // 16: FHuozhuId
                "\"FORG_ID\" TEXT," + // 17: FOrgId
                "\"FOWNER_TYPE_ID_HEAD_IN\" TEXT," + // 18: FOwnerTypeIdHeadIn
                "\"FOWNER_ID_HEAD_IN\" TEXT," + // 19: FOwnerIdHeadIn
                "\"FDBTYPE\" TEXT," + // 20: FDBType
                "\"FDBDIRECTION\" TEXT," + // 21: FDBDirection
                "\"FID\" TEXT," + // 22: FID
                "\"FENTRY_ID\" TEXT," + // 23: FEntryID
                "\"FSETTLE_ORG_ID\" TEXT," + // 24: FSettleOrgId
                "\"FNEED_ORG_ID\" TEXT," + // 25: FNeedOrgId
                "\"FSETTLE_CURR_ID\" TEXT," + // 26: FSettleCurrId
                "\"FDATE\" TEXT," + // 27: FDate
                "\"FSUPPLIER_ID\" TEXT," + // 28: FSupplierId
                "\"FDEPARTMENT_NUMBER\" TEXT," + // 29: FDepartmentNumber
                "\"FDEPARTMENT\" TEXT," + // 30: FDepartment
                "\"FPURCHASE_DEPT_ID\" TEXT," + // 31: FPurchaseDeptId
                "\"FPURCHASE_DEPT\" TEXT," + // 32: FPurchaseDept
                "\"FPURCHASER_ID\" TEXT," + // 33: FPurchaserId
                "\"FPURCHASER\" TEXT," + // 34: FPurchaser
                "\"FSTOCKER_NUMBER\" TEXT," + // 35: FStockerNumber
                "\"FSTOCKER\" TEXT," + // 36: FStocker
                "\"FCUSTOMER_ID\" TEXT," + // 37: FCustomerID
                "\"FCUSTOMER\" TEXT," + // 38: FCustomer
                "\"FNOT\" TEXT," + // 39: FNot
                "\"F__FFF__TEXT\" TEXT," + // 40: F_FFF_Text
                "\"FCF_LENGHT_ANY\" TEXT," + // 41: FCfLenghtAny
                "\"FCF_THICK\" TEXT," + // 42: FCfThick
                "\"FCF_WIDE\" TEXT," + // 43: FCfWide
                "\"FSTORAGE_ID\" TEXT," + // 44: FStorageId
                "\"FSTORAGE_NUMBER\" TEXT," + // 45: FStorageNumber
                "\"FSTORAGE\" TEXT," + // 46: FStorage
                "\"FBOX_CODE\" TEXT," + // 47: FBoxCode
                "\"FBATCH\" TEXT," + // 48: FBatch
                "\"FBOX_CODE_ORDER\" INTEGER NOT NULL ," + // 49: FBoxCodeOrder
                "\"FSTORAGE_OUT_ID\" TEXT," + // 50: FStorageOutId
                "\"FSTORAGE_OUT\" TEXT," + // 51: FStorageOut
                "\"FSTORAGE_IN_ID\" TEXT," + // 52: FStorageInId
                "\"FSTORAGE_IN\" TEXT," + // 53: FStorageIn
                "\"FWAVE_HOUSE_OUT_ID\" TEXT," + // 54: FWaveHouseOutId
                "\"FWAVE_HOUSE_OUT\" TEXT," + // 55: FWaveHouseOut
                "\"FWAVE_HOUSE_IN_ID\" TEXT," + // 56: FWaveHouseInId
                "\"FWAVE_HOUSE_IN\" TEXT," + // 57: FWaveHouseIn
                "\"FWL_COMPANY\" TEXT," + // 58: FWlCompany
                "\"FCAR_BOX_NO\" TEXT," + // 59: FCarBoxNo
                "\"FPASS_NO\" TEXT," + // 60: FPassNo
                "\"FFREIGHT\" TEXT," + // 61: FFreight
                "\"FYAO_NO\" TEXT," + // 62: FYaoNo
                "\"FBAO_NUM\" TEXT," + // 63: FBaoNum
                "\"FIS_IN_BOX\" INTEGER NOT NULL ," + // 64: FIsInBox
                "\"FSTR1\" TEXT," + // 65: FStr1
                "\"FSTR2\" TEXT," + // 66: FStr2
                "\"FSTR3\" TEXT," + // 67: FStr3
                "\"FSTR4\" TEXT," + // 68: FStr4
                "\"FSTR5\" TEXT," + // 69: FStr5
                "\"FFIELD_MAN\" TEXT);"); // 70: FFieldMan
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"T_MAIN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, T_main entity) {
        stmt.clearBindings();
 
        String FIndex = entity.getFIndex();
        if (FIndex != null) {
            stmt.bindString(1, FIndex);
        }
        stmt.bindLong(2, entity.getFOrderId());
 
        String FAccountID = entity.getFAccountID();
        if (FAccountID != null) {
            stmt.bindString(3, FAccountID);
        }
 
        String FBarcode = entity.getFBarcode();
        if (FBarcode != null) {
            stmt.bindString(4, FBarcode);
        }
 
        String IMIE = entity.getIMIE();
        if (IMIE != null) {
            stmt.bindString(5, IMIE);
        }
 
        String FBillNo = entity.getFBillNo();
        if (FBillNo != null) {
            stmt.bindString(6, FBillNo);
        }
 
        String FBillerID = entity.getFBillerID();
        if (FBillerID != null) {
            stmt.bindString(7, FBillerID);
        }
        stmt.bindLong(8, entity.getActivity());
 
        String FSoorDerno = entity.getFSoorDerno();
        if (FSoorDerno != null) {
            stmt.bindString(9, FSoorDerno);
        }
 
        String FPriceTimePoint = entity.getFPriceTimePoint();
        if (FPriceTimePoint != null) {
            stmt.bindString(10, FPriceTimePoint);
        }
 
        String FStockOrgId = entity.getFStockOrgId();
        if (FStockOrgId != null) {
            stmt.bindString(11, FStockOrgId);
        }
 
        String FPurchaseOrgId = entity.getFPurchaseOrgId();
        if (FPurchaseOrgId != null) {
            stmt.bindString(12, FPurchaseOrgId);
        }
 
        String FBillTypeID = entity.getFBillTypeID();
        if (FBillTypeID != null) {
            stmt.bindString(13, FBillTypeID);
        }
 
        String FOwnerTypeIdHead = entity.getFOwnerTypeIdHead();
        if (FOwnerTypeIdHead != null) {
            stmt.bindString(14, FOwnerTypeIdHead);
        }
 
        String FOwnerIdHead = entity.getFOwnerIdHead();
        if (FOwnerIdHead != null) {
            stmt.bindString(15, FOwnerIdHead);
        }
 
        String FOwnerIdHeadNote = entity.getFOwnerIdHeadNote();
        if (FOwnerIdHeadNote != null) {
            stmt.bindString(16, FOwnerIdHeadNote);
        }
 
        String FHuozhuId = entity.getFHuozhuId();
        if (FHuozhuId != null) {
            stmt.bindString(17, FHuozhuId);
        }
 
        String FOrgId = entity.getFOrgId();
        if (FOrgId != null) {
            stmt.bindString(18, FOrgId);
        }
 
        String FOwnerTypeIdHeadIn = entity.getFOwnerTypeIdHeadIn();
        if (FOwnerTypeIdHeadIn != null) {
            stmt.bindString(19, FOwnerTypeIdHeadIn);
        }
 
        String FOwnerIdHeadIn = entity.getFOwnerIdHeadIn();
        if (FOwnerIdHeadIn != null) {
            stmt.bindString(20, FOwnerIdHeadIn);
        }
 
        String FDBType = entity.getFDBType();
        if (FDBType != null) {
            stmt.bindString(21, FDBType);
        }
 
        String FDBDirection = entity.getFDBDirection();
        if (FDBDirection != null) {
            stmt.bindString(22, FDBDirection);
        }
 
        String FID = entity.getFID();
        if (FID != null) {
            stmt.bindString(23, FID);
        }
 
        String FEntryID = entity.getFEntryID();
        if (FEntryID != null) {
            stmt.bindString(24, FEntryID);
        }
 
        String FSettleOrgId = entity.getFSettleOrgId();
        if (FSettleOrgId != null) {
            stmt.bindString(25, FSettleOrgId);
        }
 
        String FNeedOrgId = entity.getFNeedOrgId();
        if (FNeedOrgId != null) {
            stmt.bindString(26, FNeedOrgId);
        }
 
        String FSettleCurrId = entity.getFSettleCurrId();
        if (FSettleCurrId != null) {
            stmt.bindString(27, FSettleCurrId);
        }
 
        String FDate = entity.getFDate();
        if (FDate != null) {
            stmt.bindString(28, FDate);
        }
 
        String FSupplierId = entity.getFSupplierId();
        if (FSupplierId != null) {
            stmt.bindString(29, FSupplierId);
        }
 
        String FDepartmentNumber = entity.getFDepartmentNumber();
        if (FDepartmentNumber != null) {
            stmt.bindString(30, FDepartmentNumber);
        }
 
        String FDepartment = entity.getFDepartment();
        if (FDepartment != null) {
            stmt.bindString(31, FDepartment);
        }
 
        String FPurchaseDeptId = entity.getFPurchaseDeptId();
        if (FPurchaseDeptId != null) {
            stmt.bindString(32, FPurchaseDeptId);
        }
 
        String FPurchaseDept = entity.getFPurchaseDept();
        if (FPurchaseDept != null) {
            stmt.bindString(33, FPurchaseDept);
        }
 
        String FPurchaserId = entity.getFPurchaserId();
        if (FPurchaserId != null) {
            stmt.bindString(34, FPurchaserId);
        }
 
        String FPurchaser = entity.getFPurchaser();
        if (FPurchaser != null) {
            stmt.bindString(35, FPurchaser);
        }
 
        String FStockerNumber = entity.getFStockerNumber();
        if (FStockerNumber != null) {
            stmt.bindString(36, FStockerNumber);
        }
 
        String FStocker = entity.getFStocker();
        if (FStocker != null) {
            stmt.bindString(37, FStocker);
        }
 
        String FCustomerID = entity.getFCustomerID();
        if (FCustomerID != null) {
            stmt.bindString(38, FCustomerID);
        }
 
        String FCustomer = entity.getFCustomer();
        if (FCustomer != null) {
            stmt.bindString(39, FCustomer);
        }
 
        String FNot = entity.getFNot();
        if (FNot != null) {
            stmt.bindString(40, FNot);
        }
 
        String F_FFF_Text = entity.getF_FFF_Text();
        if (F_FFF_Text != null) {
            stmt.bindString(41, F_FFF_Text);
        }
 
        String FCfLenghtAny = entity.getFCfLenghtAny();
        if (FCfLenghtAny != null) {
            stmt.bindString(42, FCfLenghtAny);
        }
 
        String FCfThick = entity.getFCfThick();
        if (FCfThick != null) {
            stmt.bindString(43, FCfThick);
        }
 
        String FCfWide = entity.getFCfWide();
        if (FCfWide != null) {
            stmt.bindString(44, FCfWide);
        }
 
        String FStorageId = entity.getFStorageId();
        if (FStorageId != null) {
            stmt.bindString(45, FStorageId);
        }
 
        String FStorageNumber = entity.getFStorageNumber();
        if (FStorageNumber != null) {
            stmt.bindString(46, FStorageNumber);
        }
 
        String FStorage = entity.getFStorage();
        if (FStorage != null) {
            stmt.bindString(47, FStorage);
        }
 
        String FBoxCode = entity.getFBoxCode();
        if (FBoxCode != null) {
            stmt.bindString(48, FBoxCode);
        }
 
        String FBatch = entity.getFBatch();
        if (FBatch != null) {
            stmt.bindString(49, FBatch);
        }
        stmt.bindLong(50, entity.getFBoxCodeOrder());
 
        String FStorageOutId = entity.getFStorageOutId();
        if (FStorageOutId != null) {
            stmt.bindString(51, FStorageOutId);
        }
 
        String FStorageOut = entity.getFStorageOut();
        if (FStorageOut != null) {
            stmt.bindString(52, FStorageOut);
        }
 
        String FStorageInId = entity.getFStorageInId();
        if (FStorageInId != null) {
            stmt.bindString(53, FStorageInId);
        }
 
        String FStorageIn = entity.getFStorageIn();
        if (FStorageIn != null) {
            stmt.bindString(54, FStorageIn);
        }
 
        String FWaveHouseOutId = entity.getFWaveHouseOutId();
        if (FWaveHouseOutId != null) {
            stmt.bindString(55, FWaveHouseOutId);
        }
 
        String FWaveHouseOut = entity.getFWaveHouseOut();
        if (FWaveHouseOut != null) {
            stmt.bindString(56, FWaveHouseOut);
        }
 
        String FWaveHouseInId = entity.getFWaveHouseInId();
        if (FWaveHouseInId != null) {
            stmt.bindString(57, FWaveHouseInId);
        }
 
        String FWaveHouseIn = entity.getFWaveHouseIn();
        if (FWaveHouseIn != null) {
            stmt.bindString(58, FWaveHouseIn);
        }
 
        String FWlCompany = entity.getFWlCompany();
        if (FWlCompany != null) {
            stmt.bindString(59, FWlCompany);
        }
 
        String FCarBoxNo = entity.getFCarBoxNo();
        if (FCarBoxNo != null) {
            stmt.bindString(60, FCarBoxNo);
        }
 
        String FPassNo = entity.getFPassNo();
        if (FPassNo != null) {
            stmt.bindString(61, FPassNo);
        }
 
        String FFreight = entity.getFFreight();
        if (FFreight != null) {
            stmt.bindString(62, FFreight);
        }
 
        String FYaoNo = entity.getFYaoNo();
        if (FYaoNo != null) {
            stmt.bindString(63, FYaoNo);
        }
 
        String FBaoNum = entity.getFBaoNum();
        if (FBaoNum != null) {
            stmt.bindString(64, FBaoNum);
        }
        stmt.bindLong(65, entity.getFIsInBox());
 
        String FStr1 = entity.getFStr1();
        if (FStr1 != null) {
            stmt.bindString(66, FStr1);
        }
 
        String FStr2 = entity.getFStr2();
        if (FStr2 != null) {
            stmt.bindString(67, FStr2);
        }
 
        String FStr3 = entity.getFStr3();
        if (FStr3 != null) {
            stmt.bindString(68, FStr3);
        }
 
        String FStr4 = entity.getFStr4();
        if (FStr4 != null) {
            stmt.bindString(69, FStr4);
        }
 
        String FStr5 = entity.getFStr5();
        if (FStr5 != null) {
            stmt.bindString(70, FStr5);
        }
 
        String FFieldMan = entity.getFFieldMan();
        if (FFieldMan != null) {
            stmt.bindString(71, FFieldMan);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, T_main entity) {
        stmt.clearBindings();
 
        String FIndex = entity.getFIndex();
        if (FIndex != null) {
            stmt.bindString(1, FIndex);
        }
        stmt.bindLong(2, entity.getFOrderId());
 
        String FAccountID = entity.getFAccountID();
        if (FAccountID != null) {
            stmt.bindString(3, FAccountID);
        }
 
        String FBarcode = entity.getFBarcode();
        if (FBarcode != null) {
            stmt.bindString(4, FBarcode);
        }
 
        String IMIE = entity.getIMIE();
        if (IMIE != null) {
            stmt.bindString(5, IMIE);
        }
 
        String FBillNo = entity.getFBillNo();
        if (FBillNo != null) {
            stmt.bindString(6, FBillNo);
        }
 
        String FBillerID = entity.getFBillerID();
        if (FBillerID != null) {
            stmt.bindString(7, FBillerID);
        }
        stmt.bindLong(8, entity.getActivity());
 
        String FSoorDerno = entity.getFSoorDerno();
        if (FSoorDerno != null) {
            stmt.bindString(9, FSoorDerno);
        }
 
        String FPriceTimePoint = entity.getFPriceTimePoint();
        if (FPriceTimePoint != null) {
            stmt.bindString(10, FPriceTimePoint);
        }
 
        String FStockOrgId = entity.getFStockOrgId();
        if (FStockOrgId != null) {
            stmt.bindString(11, FStockOrgId);
        }
 
        String FPurchaseOrgId = entity.getFPurchaseOrgId();
        if (FPurchaseOrgId != null) {
            stmt.bindString(12, FPurchaseOrgId);
        }
 
        String FBillTypeID = entity.getFBillTypeID();
        if (FBillTypeID != null) {
            stmt.bindString(13, FBillTypeID);
        }
 
        String FOwnerTypeIdHead = entity.getFOwnerTypeIdHead();
        if (FOwnerTypeIdHead != null) {
            stmt.bindString(14, FOwnerTypeIdHead);
        }
 
        String FOwnerIdHead = entity.getFOwnerIdHead();
        if (FOwnerIdHead != null) {
            stmt.bindString(15, FOwnerIdHead);
        }
 
        String FOwnerIdHeadNote = entity.getFOwnerIdHeadNote();
        if (FOwnerIdHeadNote != null) {
            stmt.bindString(16, FOwnerIdHeadNote);
        }
 
        String FHuozhuId = entity.getFHuozhuId();
        if (FHuozhuId != null) {
            stmt.bindString(17, FHuozhuId);
        }
 
        String FOrgId = entity.getFOrgId();
        if (FOrgId != null) {
            stmt.bindString(18, FOrgId);
        }
 
        String FOwnerTypeIdHeadIn = entity.getFOwnerTypeIdHeadIn();
        if (FOwnerTypeIdHeadIn != null) {
            stmt.bindString(19, FOwnerTypeIdHeadIn);
        }
 
        String FOwnerIdHeadIn = entity.getFOwnerIdHeadIn();
        if (FOwnerIdHeadIn != null) {
            stmt.bindString(20, FOwnerIdHeadIn);
        }
 
        String FDBType = entity.getFDBType();
        if (FDBType != null) {
            stmt.bindString(21, FDBType);
        }
 
        String FDBDirection = entity.getFDBDirection();
        if (FDBDirection != null) {
            stmt.bindString(22, FDBDirection);
        }
 
        String FID = entity.getFID();
        if (FID != null) {
            stmt.bindString(23, FID);
        }
 
        String FEntryID = entity.getFEntryID();
        if (FEntryID != null) {
            stmt.bindString(24, FEntryID);
        }
 
        String FSettleOrgId = entity.getFSettleOrgId();
        if (FSettleOrgId != null) {
            stmt.bindString(25, FSettleOrgId);
        }
 
        String FNeedOrgId = entity.getFNeedOrgId();
        if (FNeedOrgId != null) {
            stmt.bindString(26, FNeedOrgId);
        }
 
        String FSettleCurrId = entity.getFSettleCurrId();
        if (FSettleCurrId != null) {
            stmt.bindString(27, FSettleCurrId);
        }
 
        String FDate = entity.getFDate();
        if (FDate != null) {
            stmt.bindString(28, FDate);
        }
 
        String FSupplierId = entity.getFSupplierId();
        if (FSupplierId != null) {
            stmt.bindString(29, FSupplierId);
        }
 
        String FDepartmentNumber = entity.getFDepartmentNumber();
        if (FDepartmentNumber != null) {
            stmt.bindString(30, FDepartmentNumber);
        }
 
        String FDepartment = entity.getFDepartment();
        if (FDepartment != null) {
            stmt.bindString(31, FDepartment);
        }
 
        String FPurchaseDeptId = entity.getFPurchaseDeptId();
        if (FPurchaseDeptId != null) {
            stmt.bindString(32, FPurchaseDeptId);
        }
 
        String FPurchaseDept = entity.getFPurchaseDept();
        if (FPurchaseDept != null) {
            stmt.bindString(33, FPurchaseDept);
        }
 
        String FPurchaserId = entity.getFPurchaserId();
        if (FPurchaserId != null) {
            stmt.bindString(34, FPurchaserId);
        }
 
        String FPurchaser = entity.getFPurchaser();
        if (FPurchaser != null) {
            stmt.bindString(35, FPurchaser);
        }
 
        String FStockerNumber = entity.getFStockerNumber();
        if (FStockerNumber != null) {
            stmt.bindString(36, FStockerNumber);
        }
 
        String FStocker = entity.getFStocker();
        if (FStocker != null) {
            stmt.bindString(37, FStocker);
        }
 
        String FCustomerID = entity.getFCustomerID();
        if (FCustomerID != null) {
            stmt.bindString(38, FCustomerID);
        }
 
        String FCustomer = entity.getFCustomer();
        if (FCustomer != null) {
            stmt.bindString(39, FCustomer);
        }
 
        String FNot = entity.getFNot();
        if (FNot != null) {
            stmt.bindString(40, FNot);
        }
 
        String F_FFF_Text = entity.getF_FFF_Text();
        if (F_FFF_Text != null) {
            stmt.bindString(41, F_FFF_Text);
        }
 
        String FCfLenghtAny = entity.getFCfLenghtAny();
        if (FCfLenghtAny != null) {
            stmt.bindString(42, FCfLenghtAny);
        }
 
        String FCfThick = entity.getFCfThick();
        if (FCfThick != null) {
            stmt.bindString(43, FCfThick);
        }
 
        String FCfWide = entity.getFCfWide();
        if (FCfWide != null) {
            stmt.bindString(44, FCfWide);
        }
 
        String FStorageId = entity.getFStorageId();
        if (FStorageId != null) {
            stmt.bindString(45, FStorageId);
        }
 
        String FStorageNumber = entity.getFStorageNumber();
        if (FStorageNumber != null) {
            stmt.bindString(46, FStorageNumber);
        }
 
        String FStorage = entity.getFStorage();
        if (FStorage != null) {
            stmt.bindString(47, FStorage);
        }
 
        String FBoxCode = entity.getFBoxCode();
        if (FBoxCode != null) {
            stmt.bindString(48, FBoxCode);
        }
 
        String FBatch = entity.getFBatch();
        if (FBatch != null) {
            stmt.bindString(49, FBatch);
        }
        stmt.bindLong(50, entity.getFBoxCodeOrder());
 
        String FStorageOutId = entity.getFStorageOutId();
        if (FStorageOutId != null) {
            stmt.bindString(51, FStorageOutId);
        }
 
        String FStorageOut = entity.getFStorageOut();
        if (FStorageOut != null) {
            stmt.bindString(52, FStorageOut);
        }
 
        String FStorageInId = entity.getFStorageInId();
        if (FStorageInId != null) {
            stmt.bindString(53, FStorageInId);
        }
 
        String FStorageIn = entity.getFStorageIn();
        if (FStorageIn != null) {
            stmt.bindString(54, FStorageIn);
        }
 
        String FWaveHouseOutId = entity.getFWaveHouseOutId();
        if (FWaveHouseOutId != null) {
            stmt.bindString(55, FWaveHouseOutId);
        }
 
        String FWaveHouseOut = entity.getFWaveHouseOut();
        if (FWaveHouseOut != null) {
            stmt.bindString(56, FWaveHouseOut);
        }
 
        String FWaveHouseInId = entity.getFWaveHouseInId();
        if (FWaveHouseInId != null) {
            stmt.bindString(57, FWaveHouseInId);
        }
 
        String FWaveHouseIn = entity.getFWaveHouseIn();
        if (FWaveHouseIn != null) {
            stmt.bindString(58, FWaveHouseIn);
        }
 
        String FWlCompany = entity.getFWlCompany();
        if (FWlCompany != null) {
            stmt.bindString(59, FWlCompany);
        }
 
        String FCarBoxNo = entity.getFCarBoxNo();
        if (FCarBoxNo != null) {
            stmt.bindString(60, FCarBoxNo);
        }
 
        String FPassNo = entity.getFPassNo();
        if (FPassNo != null) {
            stmt.bindString(61, FPassNo);
        }
 
        String FFreight = entity.getFFreight();
        if (FFreight != null) {
            stmt.bindString(62, FFreight);
        }
 
        String FYaoNo = entity.getFYaoNo();
        if (FYaoNo != null) {
            stmt.bindString(63, FYaoNo);
        }
 
        String FBaoNum = entity.getFBaoNum();
        if (FBaoNum != null) {
            stmt.bindString(64, FBaoNum);
        }
        stmt.bindLong(65, entity.getFIsInBox());
 
        String FStr1 = entity.getFStr1();
        if (FStr1 != null) {
            stmt.bindString(66, FStr1);
        }
 
        String FStr2 = entity.getFStr2();
        if (FStr2 != null) {
            stmt.bindString(67, FStr2);
        }
 
        String FStr3 = entity.getFStr3();
        if (FStr3 != null) {
            stmt.bindString(68, FStr3);
        }
 
        String FStr4 = entity.getFStr4();
        if (FStr4 != null) {
            stmt.bindString(69, FStr4);
        }
 
        String FStr5 = entity.getFStr5();
        if (FStr5 != null) {
            stmt.bindString(70, FStr5);
        }
 
        String FFieldMan = entity.getFFieldMan();
        if (FFieldMan != null) {
            stmt.bindString(71, FFieldMan);
        }
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public T_main readEntity(Cursor cursor, int offset) {
        T_main entity = new T_main( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // FIndex
            cursor.getLong(offset + 1), // FOrderId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // FAccountID
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // FBarcode
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // IMIE
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // FBillNo
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // FBillerID
            cursor.getInt(offset + 7), // activity
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // FSoorDerno
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // FPriceTimePoint
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // FStockOrgId
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // FPurchaseOrgId
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // FBillTypeID
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // FOwnerTypeIdHead
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // FOwnerIdHead
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // FOwnerIdHeadNote
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // FHuozhuId
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // FOrgId
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // FOwnerTypeIdHeadIn
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // FOwnerIdHeadIn
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // FDBType
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // FDBDirection
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // FID
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // FEntryID
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // FSettleOrgId
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // FNeedOrgId
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // FSettleCurrId
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // FDate
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // FSupplierId
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // FDepartmentNumber
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // FDepartment
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // FPurchaseDeptId
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // FPurchaseDept
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // FPurchaserId
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // FPurchaser
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // FStockerNumber
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // FStocker
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // FCustomerID
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // FCustomer
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // FNot
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // F_FFF_Text
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // FCfLenghtAny
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // FCfThick
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // FCfWide
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // FStorageId
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // FStorageNumber
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // FStorage
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // FBoxCode
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // FBatch
            cursor.getLong(offset + 49), // FBoxCodeOrder
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // FStorageOutId
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // FStorageOut
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // FStorageInId
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // FStorageIn
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // FWaveHouseOutId
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // FWaveHouseOut
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // FWaveHouseInId
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // FWaveHouseIn
            cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // FWlCompany
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // FCarBoxNo
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // FPassNo
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // FFreight
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // FYaoNo
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63), // FBaoNum
            cursor.getInt(offset + 64), // FIsInBox
            cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // FStr1
            cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66), // FStr2
            cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67), // FStr3
            cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68), // FStr4
            cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69), // FStr5
            cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70) // FFieldMan
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, T_main entity, int offset) {
        entity.setFIndex(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setFOrderId(cursor.getLong(offset + 1));
        entity.setFAccountID(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setFBarcode(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setIMIE(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setFBillNo(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setFBillerID(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setActivity(cursor.getInt(offset + 7));
        entity.setFSoorDerno(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setFPriceTimePoint(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setFStockOrgId(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setFPurchaseOrgId(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setFBillTypeID(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setFOwnerTypeIdHead(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setFOwnerIdHead(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setFOwnerIdHeadNote(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setFHuozhuId(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setFOrgId(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setFOwnerTypeIdHeadIn(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setFOwnerIdHeadIn(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setFDBType(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setFDBDirection(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setFID(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setFEntryID(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setFSettleOrgId(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setFNeedOrgId(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setFSettleCurrId(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setFDate(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setFSupplierId(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setFDepartmentNumber(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setFDepartment(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setFPurchaseDeptId(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setFPurchaseDept(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setFPurchaserId(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setFPurchaser(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setFStockerNumber(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setFStocker(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setFCustomerID(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setFCustomer(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setFNot(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setF_FFF_Text(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setFCfLenghtAny(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setFCfThick(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setFCfWide(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setFStorageId(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setFStorageNumber(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setFStorage(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setFBoxCode(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setFBatch(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setFBoxCodeOrder(cursor.getLong(offset + 49));
        entity.setFStorageOutId(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setFStorageOut(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setFStorageInId(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setFStorageIn(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setFWaveHouseOutId(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setFWaveHouseOut(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setFWaveHouseInId(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setFWaveHouseIn(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setFWlCompany(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setFCarBoxNo(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setFPassNo(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setFFreight(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setFYaoNo(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setFBaoNum(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
        entity.setFIsInBox(cursor.getInt(offset + 64));
        entity.setFStr1(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setFStr2(cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66));
        entity.setFStr3(cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67));
        entity.setFStr4(cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68));
        entity.setFStr5(cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69));
        entity.setFFieldMan(cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70));
     }
    
    @Override
    protected final String updateKeyAfterInsert(T_main entity, long rowId) {
        return entity.getFIndex();
    }
    
    @Override
    public String getKey(T_main entity) {
        if(entity != null) {
            return entity.getFIndex();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(T_main entity) {
        return entity.getFIndex() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
