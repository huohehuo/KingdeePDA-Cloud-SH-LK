package com.fangzuo.greendao.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.fangzuo.assist.cloud.Dao.DryingGetData;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "DRYING_GET_DATA".
*/
public class DryingGetDataDao extends AbstractDao<DryingGetData, Long> {

    public static final String TABLENAME = "DRYING_GET_DATA";

    /**
     * Properties of entity DryingGetData.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property FIndex = new Property(0, Long.class, "FIndex", true, "_id");
        public final static Property FID = new Property(1, String.class, "FID", false, "FID");
        public final static Property FAccountID = new Property(2, String.class, "FAccountID", false, "FACCOUNT_ID");
        public final static Property FEntryID = new Property(3, String.class, "FEntryID", false, "FENTRY_ID");
        public final static Property FItemID = new Property(4, String.class, "FItemID", false, "FITEM_ID");
        public final static Property FUnitID = new Property(5, String.class, "FUnitID", false, "FUNIT_ID");
        public final static Property FDCStockID = new Property(6, String.class, "FDCStockID", false, "FDCSTOCK_ID");
        public final static Property FDCSPID = new Property(7, String.class, "FDCSPID", false, "FDCSPID");
        public final static Property FSTOCKORGID = new Property(8, String.class, "FSTOCKORGID", false, "FSTOCKORGID");
        public final static Property FOWNERID = new Property(9, String.class, "FOWNERID", false, "FOWNERID");
        public final static Property FBoxCode = new Property(10, String.class, "FBoxCode", false, "FBOX_CODE");
        public final static Property FSplitBoxCode = new Property(11, String.class, "FSplitBoxCode", false, "FSPLIT_BOX_CODE");
        public final static Property FDate = new Property(12, String.class, "FDate", false, "FDATE");
        public final static Property FUser = new Property(13, String.class, "FUser", false, "FUSER");
        public final static Property FName = new Property(14, String.class, "FName", false, "FNAME");
        public final static Property FUnit = new Property(15, String.class, "FUnit", false, "FUNIT");
        public final static Property FModel = new Property(16, String.class, "FModel", false, "FMODEL");
        public final static Property FBatch = new Property(17, String.class, "FBatch", false, "FBATCH");
        public final static Property FLenght = new Property(18, String.class, "FLenght", false, "FLENGHT");
        public final static Property FChang = new Property(19, String.class, "FChang", false, "FCHANG");
        public final static Property FKuan = new Property(20, String.class, "FKuan", false, "FKUAN");
        public final static Property FHou = new Property(21, String.class, "FHou", false, "FHOU");
        public final static Property FQty = new Property(22, String.class, "FQty", false, "FQTY");
        public final static Property FQtySplit = new Property(23, String.class, "FQtySplit", false, "FQTY_SPLIT");
        public final static Property FM2Split = new Property(24, String.class, "FM2Split", false, "FM2_SPLIT");
        public final static Property FQtySum = new Property(25, String.class, "FQtySum", false, "FQTY_SUM");
        public final static Property FM2 = new Property(26, String.class, "FM2", false, "FM2");
        public final static Property FM2Sum = new Property(27, String.class, "FM2Sum", false, "FM2_SUM");
        public final static Property FVolSum = new Property(28, String.class, "FVolSum", false, "FVOL_SUM");
        public final static Property FTip = new Property(29, String.class, "FTip", false, "FTIP");
        public final static Property FBarcode = new Property(30, String.class, "FBarcode", false, "FBARCODE");
        public final static Property IMIE = new Property(31, String.class, "IMIE", false, "IMIE");
        public final static Property FBillerID = new Property(32, String.class, "FBillerID", false, "FBILLER_ID");
        public final static Property FOrderId = new Property(33, long.class, "FOrderId", false, "FORDER_ID");
        public final static Property Activity = new Property(34, int.class, "activity", false, "ACTIVITY");
        public final static Property FNumber = new Property(35, String.class, "FNumber", false, "FNUMBER");
        public final static Property FUnitNumber = new Property(36, String.class, "FUnitNumber", false, "FUNIT_NUMBER");
        public final static Property FStorageNumber = new Property(37, String.class, "FStorageNumber", false, "FSTORAGE_NUMBER");
        public final static Property FStoreOrgNumber = new Property(38, String.class, "FStoreOrgNumber", false, "FSTORE_ORG_NUMBER");
        public final static Property FHuozhuNumber = new Property(39, String.class, "FHuozhuNumber", false, "FHUOZHU_NUMBER");
        public final static Property FFBaoNum = new Property(40, String.class, "FFBaoNum", false, "FFBAO_NUM");
        public final static Property FLev = new Property(41, String.class, "FLev", false, "FLEV");
        public final static Property FCarNo = new Property(42, String.class, "FCarNo", false, "FCAR_NO");
        public final static Property FStr1 = new Property(43, String.class, "FStr1", false, "FSTR1");
        public final static Property FStr2 = new Property(44, String.class, "FStr2", false, "FSTR2");
        public final static Property FStr3 = new Property(45, String.class, "FStr3", false, "FSTR3");
        public final static Property FStr4 = new Property(46, String.class, "FStr4", false, "FSTR4");
        public final static Property FStr5 = new Property(47, String.class, "FStr5", false, "FSTR5");
    }


    public DryingGetDataDao(DaoConfig config) {
        super(config);
    }
    
    public DryingGetDataDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"DRYING_GET_DATA\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: FIndex
                "\"FID\" TEXT," + // 1: FID
                "\"FACCOUNT_ID\" TEXT," + // 2: FAccountID
                "\"FENTRY_ID\" TEXT," + // 3: FEntryID
                "\"FITEM_ID\" TEXT," + // 4: FItemID
                "\"FUNIT_ID\" TEXT," + // 5: FUnitID
                "\"FDCSTOCK_ID\" TEXT," + // 6: FDCStockID
                "\"FDCSPID\" TEXT," + // 7: FDCSPID
                "\"FSTOCKORGID\" TEXT," + // 8: FSTOCKORGID
                "\"FOWNERID\" TEXT," + // 9: FOWNERID
                "\"FBOX_CODE\" TEXT," + // 10: FBoxCode
                "\"FSPLIT_BOX_CODE\" TEXT," + // 11: FSplitBoxCode
                "\"FDATE\" TEXT," + // 12: FDate
                "\"FUSER\" TEXT," + // 13: FUser
                "\"FNAME\" TEXT," + // 14: FName
                "\"FUNIT\" TEXT," + // 15: FUnit
                "\"FMODEL\" TEXT," + // 16: FModel
                "\"FBATCH\" TEXT," + // 17: FBatch
                "\"FLENGHT\" TEXT," + // 18: FLenght
                "\"FCHANG\" TEXT," + // 19: FChang
                "\"FKUAN\" TEXT," + // 20: FKuan
                "\"FHOU\" TEXT," + // 21: FHou
                "\"FQTY\" TEXT," + // 22: FQty
                "\"FQTY_SPLIT\" TEXT," + // 23: FQtySplit
                "\"FM2_SPLIT\" TEXT," + // 24: FM2Split
                "\"FQTY_SUM\" TEXT," + // 25: FQtySum
                "\"FM2\" TEXT," + // 26: FM2
                "\"FM2_SUM\" TEXT," + // 27: FM2Sum
                "\"FVOL_SUM\" TEXT," + // 28: FVolSum
                "\"FTIP\" TEXT," + // 29: FTip
                "\"FBARCODE\" TEXT," + // 30: FBarcode
                "\"IMIE\" TEXT," + // 31: IMIE
                "\"FBILLER_ID\" TEXT," + // 32: FBillerID
                "\"FORDER_ID\" INTEGER NOT NULL ," + // 33: FOrderId
                "\"ACTIVITY\" INTEGER NOT NULL ," + // 34: activity
                "\"FNUMBER\" TEXT," + // 35: FNumber
                "\"FUNIT_NUMBER\" TEXT," + // 36: FUnitNumber
                "\"FSTORAGE_NUMBER\" TEXT," + // 37: FStorageNumber
                "\"FSTORE_ORG_NUMBER\" TEXT," + // 38: FStoreOrgNumber
                "\"FHUOZHU_NUMBER\" TEXT," + // 39: FHuozhuNumber
                "\"FFBAO_NUM\" TEXT," + // 40: FFBaoNum
                "\"FLEV\" TEXT," + // 41: FLev
                "\"FCAR_NO\" TEXT," + // 42: FCarNo
                "\"FSTR1\" TEXT," + // 43: FStr1
                "\"FSTR2\" TEXT," + // 44: FStr2
                "\"FSTR3\" TEXT," + // 45: FStr3
                "\"FSTR4\" TEXT," + // 46: FStr4
                "\"FSTR5\" TEXT);"); // 47: FStr5
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"DRYING_GET_DATA\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, DryingGetData entity) {
        stmt.clearBindings();
 
        Long FIndex = entity.getFIndex();
        if (FIndex != null) {
            stmt.bindLong(1, FIndex);
        }
 
        String FID = entity.getFID();
        if (FID != null) {
            stmt.bindString(2, FID);
        }
 
        String FAccountID = entity.getFAccountID();
        if (FAccountID != null) {
            stmt.bindString(3, FAccountID);
        }
 
        String FEntryID = entity.getFEntryID();
        if (FEntryID != null) {
            stmt.bindString(4, FEntryID);
        }
 
        String FItemID = entity.getFItemID();
        if (FItemID != null) {
            stmt.bindString(5, FItemID);
        }
 
        String FUnitID = entity.getFUnitID();
        if (FUnitID != null) {
            stmt.bindString(6, FUnitID);
        }
 
        String FDCStockID = entity.getFDCStockID();
        if (FDCStockID != null) {
            stmt.bindString(7, FDCStockID);
        }
 
        String FDCSPID = entity.getFDCSPID();
        if (FDCSPID != null) {
            stmt.bindString(8, FDCSPID);
        }
 
        String FSTOCKORGID = entity.getFSTOCKORGID();
        if (FSTOCKORGID != null) {
            stmt.bindString(9, FSTOCKORGID);
        }
 
        String FOWNERID = entity.getFOWNERID();
        if (FOWNERID != null) {
            stmt.bindString(10, FOWNERID);
        }
 
        String FBoxCode = entity.getFBoxCode();
        if (FBoxCode != null) {
            stmt.bindString(11, FBoxCode);
        }
 
        String FSplitBoxCode = entity.getFSplitBoxCode();
        if (FSplitBoxCode != null) {
            stmt.bindString(12, FSplitBoxCode);
        }
 
        String FDate = entity.getFDate();
        if (FDate != null) {
            stmt.bindString(13, FDate);
        }
 
        String FUser = entity.getFUser();
        if (FUser != null) {
            stmt.bindString(14, FUser);
        }
 
        String FName = entity.getFName();
        if (FName != null) {
            stmt.bindString(15, FName);
        }
 
        String FUnit = entity.getFUnit();
        if (FUnit != null) {
            stmt.bindString(16, FUnit);
        }
 
        String FModel = entity.getFModel();
        if (FModel != null) {
            stmt.bindString(17, FModel);
        }
 
        String FBatch = entity.getFBatch();
        if (FBatch != null) {
            stmt.bindString(18, FBatch);
        }
 
        String FLenght = entity.getFLenght();
        if (FLenght != null) {
            stmt.bindString(19, FLenght);
        }
 
        String FChang = entity.getFChang();
        if (FChang != null) {
            stmt.bindString(20, FChang);
        }
 
        String FKuan = entity.getFKuan();
        if (FKuan != null) {
            stmt.bindString(21, FKuan);
        }
 
        String FHou = entity.getFHou();
        if (FHou != null) {
            stmt.bindString(22, FHou);
        }
 
        String FQty = entity.getFQty();
        if (FQty != null) {
            stmt.bindString(23, FQty);
        }
 
        String FQtySplit = entity.getFQtySplit();
        if (FQtySplit != null) {
            stmt.bindString(24, FQtySplit);
        }
 
        String FM2Split = entity.getFM2Split();
        if (FM2Split != null) {
            stmt.bindString(25, FM2Split);
        }
 
        String FQtySum = entity.getFQtySum();
        if (FQtySum != null) {
            stmt.bindString(26, FQtySum);
        }
 
        String FM2 = entity.getFM2();
        if (FM2 != null) {
            stmt.bindString(27, FM2);
        }
 
        String FM2Sum = entity.getFM2Sum();
        if (FM2Sum != null) {
            stmt.bindString(28, FM2Sum);
        }
 
        String FVolSum = entity.getFVolSum();
        if (FVolSum != null) {
            stmt.bindString(29, FVolSum);
        }
 
        String FTip = entity.getFTip();
        if (FTip != null) {
            stmt.bindString(30, FTip);
        }
 
        String FBarcode = entity.getFBarcode();
        if (FBarcode != null) {
            stmt.bindString(31, FBarcode);
        }
 
        String IMIE = entity.getIMIE();
        if (IMIE != null) {
            stmt.bindString(32, IMIE);
        }
 
        String FBillerID = entity.getFBillerID();
        if (FBillerID != null) {
            stmt.bindString(33, FBillerID);
        }
        stmt.bindLong(34, entity.getFOrderId());
        stmt.bindLong(35, entity.getActivity());
 
        String FNumber = entity.getFNumber();
        if (FNumber != null) {
            stmt.bindString(36, FNumber);
        }
 
        String FUnitNumber = entity.getFUnitNumber();
        if (FUnitNumber != null) {
            stmt.bindString(37, FUnitNumber);
        }
 
        String FStorageNumber = entity.getFStorageNumber();
        if (FStorageNumber != null) {
            stmt.bindString(38, FStorageNumber);
        }
 
        String FStoreOrgNumber = entity.getFStoreOrgNumber();
        if (FStoreOrgNumber != null) {
            stmt.bindString(39, FStoreOrgNumber);
        }
 
        String FHuozhuNumber = entity.getFHuozhuNumber();
        if (FHuozhuNumber != null) {
            stmt.bindString(40, FHuozhuNumber);
        }
 
        String FFBaoNum = entity.getFFBaoNum();
        if (FFBaoNum != null) {
            stmt.bindString(41, FFBaoNum);
        }
 
        String FLev = entity.getFLev();
        if (FLev != null) {
            stmt.bindString(42, FLev);
        }
 
        String FCarNo = entity.getFCarNo();
        if (FCarNo != null) {
            stmt.bindString(43, FCarNo);
        }
 
        String FStr1 = entity.getFStr1();
        if (FStr1 != null) {
            stmt.bindString(44, FStr1);
        }
 
        String FStr2 = entity.getFStr2();
        if (FStr2 != null) {
            stmt.bindString(45, FStr2);
        }
 
        String FStr3 = entity.getFStr3();
        if (FStr3 != null) {
            stmt.bindString(46, FStr3);
        }
 
        String FStr4 = entity.getFStr4();
        if (FStr4 != null) {
            stmt.bindString(47, FStr4);
        }
 
        String FStr5 = entity.getFStr5();
        if (FStr5 != null) {
            stmt.bindString(48, FStr5);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, DryingGetData entity) {
        stmt.clearBindings();
 
        Long FIndex = entity.getFIndex();
        if (FIndex != null) {
            stmt.bindLong(1, FIndex);
        }
 
        String FID = entity.getFID();
        if (FID != null) {
            stmt.bindString(2, FID);
        }
 
        String FAccountID = entity.getFAccountID();
        if (FAccountID != null) {
            stmt.bindString(3, FAccountID);
        }
 
        String FEntryID = entity.getFEntryID();
        if (FEntryID != null) {
            stmt.bindString(4, FEntryID);
        }
 
        String FItemID = entity.getFItemID();
        if (FItemID != null) {
            stmt.bindString(5, FItemID);
        }
 
        String FUnitID = entity.getFUnitID();
        if (FUnitID != null) {
            stmt.bindString(6, FUnitID);
        }
 
        String FDCStockID = entity.getFDCStockID();
        if (FDCStockID != null) {
            stmt.bindString(7, FDCStockID);
        }
 
        String FDCSPID = entity.getFDCSPID();
        if (FDCSPID != null) {
            stmt.bindString(8, FDCSPID);
        }
 
        String FSTOCKORGID = entity.getFSTOCKORGID();
        if (FSTOCKORGID != null) {
            stmt.bindString(9, FSTOCKORGID);
        }
 
        String FOWNERID = entity.getFOWNERID();
        if (FOWNERID != null) {
            stmt.bindString(10, FOWNERID);
        }
 
        String FBoxCode = entity.getFBoxCode();
        if (FBoxCode != null) {
            stmt.bindString(11, FBoxCode);
        }
 
        String FSplitBoxCode = entity.getFSplitBoxCode();
        if (FSplitBoxCode != null) {
            stmt.bindString(12, FSplitBoxCode);
        }
 
        String FDate = entity.getFDate();
        if (FDate != null) {
            stmt.bindString(13, FDate);
        }
 
        String FUser = entity.getFUser();
        if (FUser != null) {
            stmt.bindString(14, FUser);
        }
 
        String FName = entity.getFName();
        if (FName != null) {
            stmt.bindString(15, FName);
        }
 
        String FUnit = entity.getFUnit();
        if (FUnit != null) {
            stmt.bindString(16, FUnit);
        }
 
        String FModel = entity.getFModel();
        if (FModel != null) {
            stmt.bindString(17, FModel);
        }
 
        String FBatch = entity.getFBatch();
        if (FBatch != null) {
            stmt.bindString(18, FBatch);
        }
 
        String FLenght = entity.getFLenght();
        if (FLenght != null) {
            stmt.bindString(19, FLenght);
        }
 
        String FChang = entity.getFChang();
        if (FChang != null) {
            stmt.bindString(20, FChang);
        }
 
        String FKuan = entity.getFKuan();
        if (FKuan != null) {
            stmt.bindString(21, FKuan);
        }
 
        String FHou = entity.getFHou();
        if (FHou != null) {
            stmt.bindString(22, FHou);
        }
 
        String FQty = entity.getFQty();
        if (FQty != null) {
            stmt.bindString(23, FQty);
        }
 
        String FQtySplit = entity.getFQtySplit();
        if (FQtySplit != null) {
            stmt.bindString(24, FQtySplit);
        }
 
        String FM2Split = entity.getFM2Split();
        if (FM2Split != null) {
            stmt.bindString(25, FM2Split);
        }
 
        String FQtySum = entity.getFQtySum();
        if (FQtySum != null) {
            stmt.bindString(26, FQtySum);
        }
 
        String FM2 = entity.getFM2();
        if (FM2 != null) {
            stmt.bindString(27, FM2);
        }
 
        String FM2Sum = entity.getFM2Sum();
        if (FM2Sum != null) {
            stmt.bindString(28, FM2Sum);
        }
 
        String FVolSum = entity.getFVolSum();
        if (FVolSum != null) {
            stmt.bindString(29, FVolSum);
        }
 
        String FTip = entity.getFTip();
        if (FTip != null) {
            stmt.bindString(30, FTip);
        }
 
        String FBarcode = entity.getFBarcode();
        if (FBarcode != null) {
            stmt.bindString(31, FBarcode);
        }
 
        String IMIE = entity.getIMIE();
        if (IMIE != null) {
            stmt.bindString(32, IMIE);
        }
 
        String FBillerID = entity.getFBillerID();
        if (FBillerID != null) {
            stmt.bindString(33, FBillerID);
        }
        stmt.bindLong(34, entity.getFOrderId());
        stmt.bindLong(35, entity.getActivity());
 
        String FNumber = entity.getFNumber();
        if (FNumber != null) {
            stmt.bindString(36, FNumber);
        }
 
        String FUnitNumber = entity.getFUnitNumber();
        if (FUnitNumber != null) {
            stmt.bindString(37, FUnitNumber);
        }
 
        String FStorageNumber = entity.getFStorageNumber();
        if (FStorageNumber != null) {
            stmt.bindString(38, FStorageNumber);
        }
 
        String FStoreOrgNumber = entity.getFStoreOrgNumber();
        if (FStoreOrgNumber != null) {
            stmt.bindString(39, FStoreOrgNumber);
        }
 
        String FHuozhuNumber = entity.getFHuozhuNumber();
        if (FHuozhuNumber != null) {
            stmt.bindString(40, FHuozhuNumber);
        }
 
        String FFBaoNum = entity.getFFBaoNum();
        if (FFBaoNum != null) {
            stmt.bindString(41, FFBaoNum);
        }
 
        String FLev = entity.getFLev();
        if (FLev != null) {
            stmt.bindString(42, FLev);
        }
 
        String FCarNo = entity.getFCarNo();
        if (FCarNo != null) {
            stmt.bindString(43, FCarNo);
        }
 
        String FStr1 = entity.getFStr1();
        if (FStr1 != null) {
            stmt.bindString(44, FStr1);
        }
 
        String FStr2 = entity.getFStr2();
        if (FStr2 != null) {
            stmt.bindString(45, FStr2);
        }
 
        String FStr3 = entity.getFStr3();
        if (FStr3 != null) {
            stmt.bindString(46, FStr3);
        }
 
        String FStr4 = entity.getFStr4();
        if (FStr4 != null) {
            stmt.bindString(47, FStr4);
        }
 
        String FStr5 = entity.getFStr5();
        if (FStr5 != null) {
            stmt.bindString(48, FStr5);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public DryingGetData readEntity(Cursor cursor, int offset) {
        DryingGetData entity = new DryingGetData( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // FIndex
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // FID
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // FAccountID
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // FEntryID
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // FItemID
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // FUnitID
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // FDCStockID
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // FDCSPID
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // FSTOCKORGID
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // FOWNERID
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // FBoxCode
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // FSplitBoxCode
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // FDate
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // FUser
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // FName
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // FUnit
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // FModel
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // FBatch
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // FLenght
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // FChang
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // FKuan
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // FHou
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // FQty
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // FQtySplit
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // FM2Split
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // FQtySum
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // FM2
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // FM2Sum
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // FVolSum
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // FTip
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // FBarcode
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // IMIE
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // FBillerID
            cursor.getLong(offset + 33), // FOrderId
            cursor.getInt(offset + 34), // activity
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // FNumber
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // FUnitNumber
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // FStorageNumber
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // FStoreOrgNumber
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // FHuozhuNumber
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // FFBaoNum
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // FLev
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // FCarNo
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // FStr1
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // FStr2
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // FStr3
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // FStr4
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47) // FStr5
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, DryingGetData entity, int offset) {
        entity.setFIndex(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setFID(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setFAccountID(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setFEntryID(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setFItemID(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setFUnitID(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setFDCStockID(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setFDCSPID(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setFSTOCKORGID(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setFOWNERID(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setFBoxCode(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setFSplitBoxCode(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setFDate(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setFUser(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setFName(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setFUnit(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setFModel(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setFBatch(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setFLenght(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setFChang(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setFKuan(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setFHou(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setFQty(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setFQtySplit(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setFM2Split(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setFQtySum(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setFM2(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setFM2Sum(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setFVolSum(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setFTip(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setFBarcode(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setIMIE(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setFBillerID(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setFOrderId(cursor.getLong(offset + 33));
        entity.setActivity(cursor.getInt(offset + 34));
        entity.setFNumber(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setFUnitNumber(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setFStorageNumber(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setFStoreOrgNumber(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setFHuozhuNumber(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setFFBaoNum(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setFLev(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setFCarNo(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setFStr1(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setFStr2(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setFStr3(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setFStr4(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setFStr5(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(DryingGetData entity, long rowId) {
        entity.setFIndex(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(DryingGetData entity) {
        if(entity != null) {
            return entity.getFIndex();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(DryingGetData entity) {
        return entity.getFIndex() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
